<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<artifactId>springMVC-Web</artifactId>
	<packaging>war</packaging>
	<name>springMVC-Web</name>
	<description>Pruebas con DB en file o embebida</description>

	<parent>
		<relativePath>../pom.xml</relativePath>
		<groupId>com.jesusfc</groupId>
		<artifactId>SpringMVC</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>

	<properties>
		<apachetiles.version>3.0.8</apachetiles.version>
		<angualarjs.version>1.7.5</angualarjs.version>
		<webJars.bootstrap.version>3.3.6</webJars.bootstrap.version>
		<jackson.version>2.12.7.1</jackson.version>
	</properties>

	<build>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<nonFilteredFileExtensions>
						<nonFilteredFileExtension>pdf</nonFilteredFileExtension>
						<nonFilteredFileExtension>xml</nonFilteredFileExtension>
					</nonFilteredFileExtensions>
					<webResources>
						<resource>
							<directory>WebContent/WEB-INF/views/pages</directory>
							<targetPath>WEB-INF/views/pages</targetPath>
							<filtering>true</filtering>
						</resource>
					</webResources>
					<warSourceDirectory>WebContent</warSourceDirectory>
				</configuration>
			</plugin>
		</plugins>

	</build>


	<!-- DEPENDENCIAS -->
	<dependencies>

		<!-- services layer -->
		<dependency>
			<groupId>com.jesusfc</groupId>
			<artifactId>test-service-layer</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>

		<!-- Spring -->
		<!-- spring-core: this is the core module of the Spring framework;
			 it should be used in any Spring-based application. -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<!-- Spring MVC -->
		<!-- spring-web, spring-webmvc: these are the web modules which allow you to create either REST resources or standard controllers. -->
		<!-- 
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${spring.version}</version>
		</dependency>
		 -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<!-- JSON -->
		<!-- 
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		 -->
		
		<!--
			jackson-databind: this library provides implicit conversion between JSON and POJO classes. 
			When this library is imported into pom.xml, you don't have to worry about converting JSON requests into POJO or POJO responses into JSON; 
			this is fully handled implicitly by this library. In case you're interested in XML data type, then use jackson-xml-databind. 
		-->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<!-- 
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
			<version>${jackson.version}</version>
		</dependency>
 		-->
 		
		<!-- Spring : application development framework -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<!-- Servlet -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.1.0</version>
		</dependency>

		<!-- Apache Tiles -->
		<dependency>
			<groupId>org.apache.tiles</groupId>
			<artifactId>tiles-core</artifactId>
			<version>${apachetiles.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.tiles</groupId>
			<artifactId>tiles-api</artifactId>
			<version>${apachetiles.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.tiles</groupId>
			<artifactId>tiles-servlet</artifactId>
			<version>${apachetiles.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.tiles</groupId>
			<artifactId>tiles-jsp</artifactId>
			<version>${apachetiles.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.tiles</groupId>
			<artifactId>tiles-template</artifactId>
			<version>${apachetiles.version}</version>
		</dependency>

		<!-- JSP : Java Server Page -->
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>jsp-api</artifactId>
			<version>2.2</version>
		</dependency>

		<!-- JSTL : Standard Tag Library / Taglibs -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>

		<dependency>
			<groupId>taglibs</groupId>
			<artifactId>standard</artifactId>
			<version>1.1.2</version>
		</dependency>

		<!-- Bean Validator API JSR349 -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>5.1.3.Final</version>
		</dependency>

		<!-- commons-lang : class utilities -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.3.2</version>
		</dependency>

		<!-- Angular JS -->
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>angularjs</artifactId>
			<version>${angualarjs.version}</version>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>bootstrap</artifactId>
			<version>${webJars.bootstrap.version}</version>
			<scope>runtime</scope>
		</dependency>

		<!-- LOGS UTILIDADES -->
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
		</dependency>

	</dependencies>


</project>
